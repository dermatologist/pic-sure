<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>edu.harvard.hms.dbmi.avillach</groupId>
		<artifactId>pic-sure-api</artifactId>
		<version>2.0.0-SNAPSHOT</version>
	</parent>
	<artifactId>pic-sure-api-wildfly</artifactId>
	<packaging>war</packaging>
	<name>pic-sure-api-wildfly</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<wildfly.version>17.0.0.Final</wildfly.version>
		<jboss.home>${project.build.directory}/wildfly-${wildfly.version}</jboss.home>

		<!--
		*********************************************************************************************
		ALL VARIABLES USED FOR CONFIGURATION OF UNIT/INTEGRATION TESTS ARE IN THE ROOT POM FILE ONLY!
		*********************************************************************************************
		-->

	</properties>

	<dependencies>
		<dependency>
			<groupId>edu.harvard.hms.dbmi.avillach</groupId>
			<artifactId>pic-sure-api-data</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>edu.harvard.hms.dbmi.avillach</groupId>
			<artifactId>pic-sure-aggregate-resource</artifactId>
			<classifier>classes</classifier>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>edu.harvard.hms.dbmi.avillach</groupId>
			<artifactId>pic-sure-gnome-i2b2-count-resource</artifactId>
			<classifier>classes</classifier>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>edu.harvard.hms.dbmi.avillach</groupId>
			<artifactId>pic-sure-irct-resource</artifactId>
			<classifier>classes</classifier>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>edu.harvard.hms.dbmi.avillach</groupId>
			<artifactId>pic-sure-resource-api</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>edu.harvard.hms.dbmi.avillach</groupId>
			<artifactId>pic-sure-api-war</artifactId>
			<version>${project.version}</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>edu.harvard.hms.dbmi.avillach</groupId>
			<artifactId>pic-sure-util</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
		</dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-standalone</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
	<profiles>
		<!-- include the Aggregate module for integration testing -->
		<profile>
			<id>aggregate-IT</id>
			<activation>
				<property><name>project.build.withresource.aggregate</name></property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.22.0</version>
						<configuration>
							<includes>
								<include>AggregateResourceIT.java</include>
							</includes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<inherited>false</inherited>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>edu.harvard.hms.dbmi.avillach</groupId>
											<artifactId>pic-sure-aggregate-resource</artifactId>
											<version>${project.version}</version>
											<type>war</type>
											<overWrite>true</overWrite>
											<outputDirectory>${jboss.home}/standalone/deployments</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>edu.harvard.hms.dbmi.avillach</groupId>
					<artifactId>pic-sure-aggregate-resource</artifactId>
					<classifier>classes</classifier>
					<version>${project.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<!-- include the GA4GH module for integration testing -->
		<profile>
			<id>ga4gh-IT</id>
			<activation>
				<property><name>project.build.withresource.ga4gh</name></property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.22.0</version>
						<configuration>
							<includes>
								<include><!-- no IT test exists --></include>
							</includes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<inherited>false</inherited>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>edu.harvard.hms.dbmi.avillach</groupId>
											<artifactId>pic-sure-ga4gh-dos</artifactId>
											<version>${project.version}</version>
											<type>war</type>
											<overWrite>true</overWrite>
											<outputDirectory>${jboss.home}/standalone/deployments</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>edu.harvard.hms.dbmi.avillach</groupId>
					<artifactId>pic-sure-ga4gh-dos</artifactId>
					<classifier>classes</classifier>
					<version>${project.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<!-- include the GNOMEI2B2 module for integration testing -->
		<profile>
			<id>gnomei2b2-IT</id>
			<activation>
				<property><name>project.build.withresource.gnomei2b2</name></property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.22.0</version>
						<configuration>
							<includes>
								<include>GnomeI2B2ResourceIT.java</include>
							</includes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<inherited>false</inherited>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>edu.harvard.hms.dbmi.avillach</groupId>
											<artifactId>pic-sure-gnome-i2b2-count-resource</artifactId>
											<version>${project.version}</version>
											<type>war</type>
											<overWrite>true</overWrite>
											<outputDirectory>${jboss.home}/standalone/deployments</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>edu.harvard.hms.dbmi.avillach</groupId>
					<artifactId>pic-sure-gnome-i2b2-count-resource</artifactId>
					<classifier>classes</classifier>
					<version>${project.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<!-- include the HSAPI module for integration testing -->
		<profile>
			<id>hsapi-IT</id>
			<activation>
				<property><name>project.build.withresource.hsapi</name></property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.22.0</version>
						<configuration>
							<includes>
								<include>HSAPIResourceIT.java</include>
							</includes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<inherited>false</inherited>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>edu.harvard.hms.dbmi.avillach</groupId>
											<artifactId>pic-sure-hsapi-resource</artifactId>
											<version>${project.version}</version>
											<type>war</type>
											<overWrite>true</overWrite>
											<outputDirectory>${jboss.home}/standalone/deployments</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>edu.harvard.hms.dbmi.avillach</groupId>
					<artifactId>pic-sure-hsapi-resource</artifactId>
					<classifier>classes</classifier>
					<version>${project.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<!-- include the IRCT module for integration testing -->
		<profile>
			<id>irct-IT</id>
			<activation>
				<property><name>project.build.withresource.irct</name></property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.22.0</version>
						<configuration>
							<includes>
								<include>IRCTResourceIT.java</include>
							</includes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<inherited>false</inherited>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>edu.harvard.hms.dbmi.avillach</groupId>
											<artifactId>pic-sure-irct-resource</artifactId>
											<version>${project.version}</version>
											<type>war</type>
											<overWrite>true</overWrite>
											<outputDirectory>${jboss.home}/standalone/deployments</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>edu.harvard.hms.dbmi.avillach</groupId>
					<artifactId>pic-sure-irct-resource</artifactId>
					<classifier>classes</classifier>
					<version>${project.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<!-- Profile to have integration tests pause and wait for debugger to connect -->
		<profile>
			<id>wildfly-it-debug</id>
			<activation>
				<property><name>debugIT</name></property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<version>2.0.1.Final</version>
						<configuration>
							<java-opts>
								<java-opt>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005</java-opt>
							</java-opts>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Profile to do integration tests WITHOUT waiting for debugger to connect -->
		<profile>
			<id>wildfly-no-it-debug</id>
			<activation>
				<property><name>!debugIT</name></property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<configuration>
							<java-opts>
								<java-opt>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</java-opt>
							</java-opts>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<plugins>
			<!-- INCLUDE THE PIC-SURE-API WAR FILE -->
 			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<!-- CLEAN THE WILDFLY DEPLOYMENT -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<failOnError>false</failOnError>
					<!--<excludeDefaultDirectories>true</excludeDefaultDirectories>-->
					<filesets>
						<fileset>
							<directory>target/</directory>
							<followSymlinks>false</followSymlinks>
							<excludes>
								<excludes>**/wildfly-*/**</excludes>
							</excludes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<!-- THIS IS USED TO PREPARE THE WILDFLY SERVER WITH THE PICSURE API AND NEEDED DEPENDENCIES -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<!-- RETREVE AND UNPACK THE WILDFLY SERVER -->
						<id>unpack-wildfly</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.wildfly</groupId>
									<artifactId>wildfly-dist</artifactId>
									<version>${wildfly.version}</version>
									<type>zip</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<!-- RETREVE AND UNPACK THE PICSURE API AND DEPENDENCIES -->
						<id>retrieve-picsure-dependencies</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>mysql</groupId>
									<artifactId>mysql-connector-java</artifactId>
									<version>5.1.38</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>${jboss.home}/modules/system/layers/base/com/sql/mysql/main/</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-standalone-xml</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${jboss.home}/standalone/configuration</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/wildflyConfiguration</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-module-xml</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${jboss.home}/modules/</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/modules/</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- THIS IS USED TO CONFIGURE PRE-INTEGRATION WILDFLY -->
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>2.0.1.Final</version>
				<configuration>
					<port>9990</port>
					<jbossHome>${jboss.home}</jbossHome>
					<java-opts>
						<java-opt>-Xmx1024m</java-opt>
						<!-- DEBUGGING OPTIONS ARE SET via -PdebugIT on the CLI -->
					</java-opts>
				</configuration>
				<executions>
					<execution>
						<id>wildfly-run</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
							<goal>deploy</goal>
						</goals>
						<configuration>
							<!-- Notices: these envs is for something that needs to be read from env in pre-integration-test -->
							<!-- These are for normal system config (not includes integration tests usage) -->
							<env>
								<!--<TARGET_IRCT_URL>http://localhost:8079</TARGET_IRCT_URL>-->
								<IRCT_TARGET_URL>http://localhost:8079</IRCT_TARGET_URL>
								<HSAPI_TARGET_URL>http://localhost:8079</HSAPI_TARGET_URL>
								<TARGET_GNOME_URL>http://localhost:8079</TARGET_GNOME_URL>
								<TARGET_I2B2_URL>http://localhost:8079</TARGET_I2B2_URL>
								<I2B2_LABEL>Patient Id</I2B2_LABEL>
								<PICSURE_2_TOKEN>${picsure.2.token}</PICSURE_2_TOKEN>
								<IRCT_RS_URL>http://localhost:8080/pic-sure-irct-resource-${project.version}/pic-sure/v1.4</IRCT_RS_URL>
								<AGGREGATE_RS_URL>http://localhost:8080/pic-sure-aggregate-resource-${project.version}/pic-sure/group</AGGREGATE_RS_URL>
                                <GNOME_I2B2_RS_URL>http://localhost:8080/pic-sure-gnome-i2b2-count-resource-${project.version}/pic-sure/gnome-i2b2-count</GNOME_I2B2_RS_URL>
								<TARGET_PICSURE_URL>http://localhost:8080/${project.artifactId}-${project.version}/pic-sure</TARGET_PICSURE_URL>
								<RESULT_FORMAT>JSON</RESULT_FORMAT>
								<PICSURE_CLIENT_SECRET>foo</PICSURE_CLIENT_SECRET>
								<PICSURE_USER_ID_CLAIM>email</PICSURE_USER_ID_CLAIM>
							</env>
						</configuration>
					</execution>
					<execution>
						<id>wildfly-stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>undeploy</goal>
							<goal>shutdown</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- THIS PLUGIN RUNS THE INTEGRATION TESTS -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.0</version>
				<configuration>
					<argLine>--illegal-access=permit</argLine>
					<excludes>
						<!-- INCLUDE YOUR RESOURCE INTEGRATION TEST HERE, IT SHOULD ONLY BE INCLUDED BY HAVING AN ACTIVE PROFILE -->
						<exclude>AggregateResourceIT.java</exclude>
						<exclude>GnomeI2B2ResourceIT.java</exclude>
						<exclude>HSAPIResourceIT.java</exclude>
						<exclude>IRCTResourceIT.java</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<!-- All these variables are for integration tests (which is all in wildfly) -->
							<!-- -->
							<environmentVariables>
								<PIC_SURE_CLIENT_SECRET>foo</PIC_SURE_CLIENT_SECRET>
								<PIC_SURE_USER_ID_CLAIM>email</PIC_SURE_USER_ID_CLAIM>
								<TARGET_IRCT_URL>http://localhost:8079</TARGET_IRCT_URL>
								<TARGET_GNOME_URL>http://localhost:8079</TARGET_GNOME_URL>
								<TARGET_I2B2_URL>http://localhost:8079</TARGET_I2B2_URL>
								<I2B2_LABEL>Patient Id</I2B2_LABEL>
								<TARGET_PICSURE_URL>http://localhost:8080/${project.artifactId}-${project.version}/pic-sure</TARGET_PICSURE_URL>
							</environmentVariables>
							<systemPropertyVariables>
								<service.url>http://localhost:8080/${project.artifactId}-${project.version}/PICSURE</service.url>
								<irct.rs.url>http://localhost:8080/pic-sure-irct-resource-${project.version}/</irct.rs.url>
								<aggregate.rs.url>http://localhost:8080/pic-sure-aggregate-resource-${project.version}/pic-sure/group</aggregate.rs.url>
								<hsapi.service.url>http://localhost:8080/pic-sure-hsapi-resource-${project.version}/</hsapi.service.url>
							</systemPropertyVariables>
							<!-- -->
						</configuration>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>javax.xml.bind</groupId>
						<artifactId>jaxb-api</artifactId>
						<version>2.3.0</version>
					</dependency>
					<dependency>
						<groupId>com.sun.xml.bind</groupId>
						<artifactId>jaxb-core</artifactId>
						<version>2.3.0</version>
					</dependency>
					<dependency>
						<groupId>com.sun.xml.bind</groupId>
						<artifactId>jaxb-impl</artifactId>
						<version>2.3.0</version>
					</dependency>
					<dependency>
						<groupId>javax.activation</groupId>
						<artifactId>activation</artifactId>
						<version>1.1.1</version>
					</dependency>
					<!-- PIC-SURE API STUFF -->
					<dependency>
						<groupId>edu.harvard.hms.dbmi.avillach</groupId>
						<artifactId>pic-sure-util</artifactId>
						<version>${project.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>

	</build>
</project>
